You are asked to design a file system that allows you to create new paths and associate them with different values.

The format of a path is one or more concatenated strings of the form: / followed by one or more lowercase English letters. For example, "/leetcode" and "/leetcode/problems" are valid paths while an empty string "" and "/" are not.

Implement the FileSystem class:

bool createPath(string path, int value) Creates a new path and associates a value to it if possible and returns true. Returns false if the path already exists or its parent path doesn't exist.
int get(string path) Returns the value associated with path or returns -1 if the path doesn't exist.

var FileSystem = function() {
    this.paths = new Map();
};

FileSystem.prototype.createPath = function(path, value) {
    // 第 1 步：基本路径验证
    if (path === "/" || path.length === 0 || this.paths.has(path)) {
        return false;
    }

    // 第 2 步：如果父对象不存在。请注意，“/”是有效的父级。
    const lastSlash = path.lastIndexOf('/');
    const parent = path.substring(0, lastSlash);
    if (parent.length > 1 && !this.paths.has(parent)) {
        return false;
    }

    // 第 3 步：添加这条新的路径并返回 true
    this.paths.set(path, value);
    return true;
};

FileSystem.prototype.get = function(path) {
    return this.paths.get(path) || -1;
};
